name: Build Wheels + PyPI deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - published

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.3.0
      env:
        # These variables allow you to customize the process how the wheels
        # for the Python packages are built. For a list of options, see this
        # page: https://cibuildwheel.readthedocs.io/en/stable/options/
        CIBW_BEFORE_BUILD: python -m pip install cmake pybind11[global]
        CIBW_SKIP: "pp* *p27-* cp35-* *musllinux*"
        CIBW_TEST_COMMAND: pytest {package}/python/tests
        CIBW_TEST_REQUIRES: pytest

    - uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl

  upload_testpypi:
    needs: [build-wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

  upload_pypi:
    needs: [build-wheels, upload_testpypi]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true